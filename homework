Выведите названия продуктов, которые покупал член семьи со статусом "son". Для получения выборки вам нужно объединить таблицу Payments с таблицей FamilyMembers по полям family_member и member_id, а также с таблицей Goods по полям good и good_id.
SELECT good_name FROM Payments
JOIN FamilyMembers on family_member=member_id
JOIN Goods on good=good_id 
where status="son"
===========================================
INNER JOIN с группировкой
Выведите идентификатор (поле room_id) и среднюю оценку комнаты (поле rating, для вывода используйте псевдоним avg_score), составленную на основании отзывов из таблицы Reviews.
Данная таблица связана с Reservations (таблица, где вы можете взять идентификатор комнаты) по полям reservation_id и Reservations.id.
select room_id,avg(rating) as avg_score from Reviews
join Reservations on reservation_id=Reservations.id
group by room_id
===========================================
Ограничение записей с начала таблицы
Отсортируйте список компаний (таблица Company) по их названию в алфавитном порядке и выведите первые две записи.
SELECT * FROM Company 
ORDER BY name limit 2
===========================================
Ограничение количества записей со смещением
Выведите начало (поле start_pair) и окончание (поле end_pair) второго и третьего занятия из таблицы Timepair.
select start_pair,end_pair from Timepair LIMIT 2 OFFSET 1
===========================================
Скалярные подзапросы
Выведите количество полётов каждого пассажира, представленного в таблице Passenger. Список полётов находится в таблице Pass_in_trip.
В качестве результата выведите количество полётов (используйте псевдоним count) и имя пассажира.
SELECT Name, COUNT(Pass_in_trip.passenger) as count
FROM Passenger
LEFT JOIN Pass_in_Trip ON passenger = Passenger.id
GROUP BY Passenger.id
===========================================
Столбцовые подзапросы с выражением IN
Выведите названия товаров из таблицы Goods (поле good_name), которые ещё ни разу не покупались ни одним из членов семьи (таблица Payments).
select good_name from Goods WHERE good_id not IN (SELECT good FROM Payments)
==========================================
Работа с регистрами
Выведите имена (поле member_name) всех членом семьи (таблица FamilyMembers) в верхнем регистре. Для вывода имени используйте псевдоним name.
SELECT  UCASE(member_name) as name FROM FamilyMembers
==========================================
Строковые подзапросы
Выведите список комнат (все поля, таблица Rooms), которые по своим удобствам (has_tv, has_internet, has_kitchen, has_air_con) совпадают с комнатой с идентификатором "11".
SELECT * FROM Rooms 
WHERE (has_tv, has_internet, has_kitchen, has_air_con) = (SELECT has_tv, has_internet, has_kitchen, has_air_con FROM Rooms WHERE id = 11)
==========================================
Отчёт по тратам
Создать отчет затрат семьи Quincey за 3 квартал 2005 года. Отсортировать по возрастанию member_name, затем по убыванию поля costs.
Последней строкой вывести итог по всей семье. Для этого необходимо под колонкой good_name вывести слово "Total:", а под costs - общую сумму всех затрат, оставив первые два поля пустыми:
WITH report 
    AS (
        SELECT  member_name, 
                status, 
                good_name, 
                sum(amount*unit_price) AS costs 
        FROM   Payments
        JOIN FamilyMembers ON Payments.family_member = 
        FamilyMembers.member_id
        JOIN Goods ON Payments.good = Goods.good_id
        WHERE Payments.date BETWEEN '2005-07-01' AND '2005-09-30'
        GROUP BY Payments.family_member, status, good_name
    )
SELECT * FROM report 
UNION 
SELECT null member_name, null status, 'Total:' good_name, SUM(costs) costs
FROM   report 
ORDER  BY COALESCE(member_name, 'zzz'), costs DESC
===========================================
*****1. Реализовать запросы по созданию таблиц базы данных.
В атрибуте ТипПубликации (таблица Источник) должно быть установлено значение по умолчанию "Статья".*****


CREATE TABLE Источник
(
    ИсточникID INT(11) not null PRIMARY KEY AUTO_INCREMENT,
    ТипПубликации VARCHAR(30) DEFAULT 'Статья',
    Название VARCHAR(30) NOT NULL,
    ВыходныеДанные VARCHAR(50) NOT NULL
);


CREATE TABLE Исследователь
(ИсследовательID int(11) not null primary key auto_increment,
Фамилия varchar(30) not null,
Имя varchar(30) not null,
Отчество varchar(30) not null
);


CREATE TABLE Исследование
(ИсследованиеID int(11) not null primary key auto_increment,
Описание varchar(100) not null,
ИсследовательID int(11) not null,
ИсточникID int(11) not null,
foreign key (ИсследовательID) references Исследователь(ИсследовательID),
foreign key (ИсточникID) references Источник(ИсточникID)
);


*****2. Выполнить вставку данных. В каждую созданную таблицу вставить как минимум по 6 строк.*****
/* Вставка данных Исследователь */


INSERT INTO Исследователь 
VALUES (1, 'Сколеновстанов', 'Николай', 'Николаевич');
INSERT INTO Исследователь 
VALUES (2, 'Немногопотерпелов', 'Петр', 'Петрович');
INSERT INTO Исследователь 
VALUES (3, 'Скреподержавнев', 'Василий', 'Васильевич');
INSERT INTO Исследователь 
VALUES (4, 'Валежникова', 'Анна', 'Дмитриевна');
INSERT INTO Исследователь 
VALUES (5, 'Мухопитомников', 'Игорь', 'Игоревич');
INSERT INTO Исследователь 
VALUES (6, 'Сракетников', 'Михаил', 'Михаилович');


/* Вставка данных Источник */


INSERT INTO Источник (ТипПубликации,Название,ВыходныеДанные)
VALUES 
('Сборник научных трудов', 'Суп из лебеды', 'Наши скрепы. – 2016. – № 1. – с. 30-35' ),
('Учебник','Как грузить валежник', 'Наши скрепы. – 2022. – № 2. – с. 20-22' ),
('монография','Чертолет и ее спутники', 'Скреподержава. – 2022. – № 3. – с. 1-2' ),
('Реферат','Деревянная лопата и ее характеристики', 'Новое поколение. – 2022. – № 4. – с. 5-7' ),
('монография','Доллар по рублю, возрадуйтесь скрепцы', 'Импортовозмещение. – 2022. – № 5. – с. 7-10' ),
('Доклад','Ресторан У дяди Вани, УРА', 'Импортовоскрешение. – 2022. – № 6. – с. 12-15' )
;


/* Вставка данных Исследование */


INSERT INTO `исследование`( `Описание`, `ИсследовательID`, `ИсточникID`) VALUES 
('В селе "Лебедово" проведено исследование супа из лебеды для населения, суп сытный',2,1),
('В селе "Сколеновстаново" грузили валежник в Китай, все прошло успешно',2,2),
('В селе "Чертолетово" проведены учения на чертолетах, взлетают выше кукурузы',3,3),
('В селе "Валежниково" копали ямы для параолимпийцев деревянными лопатами, копают хорошо',3,4),
('В селе "Немногопотерпетельск" раздали доллары, на которые ничего не купишь, скрепцы были радостные',5,5),
('В городе "Замещаево" открыт ресторан от мухопитомника, еда скрепная и вкусная',6,6)
;


***** 3. Выполнить выборку данных.*****
/*3.1. Вывессти ФИО всех исследователей, у которых фамилия начинается с буквы С. */


SELECT Фамилия,Имя, Отчество FROM исследователь WHERE фамилия LIKE'С%';


/*3.2. Вывести описание исследования с названием «Теория упругости» (Описание - это атрибут таблицы Исследование, 
название - атрибут таблицы Источник, название "Теория упругости" можно заменить на любое другое название источника, имеющееся в базе данных)*/


SELECT название,Описание 
FROM Источник INNER JOIN Исследование 
ON Источник.ИсточникID = Исследование.ИсточникID
WHERE название = 'суп из лебеды';


/*3.3. Вывести фамилию и имя исследователей, которые опубликовали монографию (т.е. тип тубликации – "Монография")*/


SELECT фамилия,имя 
FROM Источник INNER JOIN Исследователь 
ON Источник.ИсточникID = Исследователь.ИсследовательID
WHERE типПубликации = 'монография';


*****4. Выполнить обновление данных. *****
/*Поменяйте фамилию исследователя Склодовская Мария Саломея на Склодовская-Кюри 
(если такой исследователь в базе данных отсутствует, то по аналогии взять любую другую преставительницу женского пола) */



UPDATE `исследователь` SET `Фамилия`='Валежникова-Кюри' WHERE Фамилия='Валежникова';


*****5. Выполнить удаление данных.*****
/*Удалите исследователей, у которых нет ни одного исследования */


DELETE FROM Исследователь 
WHERE 
 Исследователь.ИсследовательID NOT IN (SELECT ИсследовательID 
 FROM Исследование
 );
